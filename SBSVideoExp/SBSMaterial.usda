#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Material "SBSMaterial"
    {
        asset inputs:texture (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-714.7617, 37.04297)
                    float2 sizeInSubgraph = (115.5, 53)
                    int stackingOrderInSubgraph = 80
                }
            }
        )
        prepend token outputs:mtlx:surface.connect = </Root/SBSMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (570.13995, 229.80997)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 69

        def Shader "GeometrySwitchCameraIndex"
        {
            uniform token info:id = "ND_realitykit_geometry_switch_cameraindex_color3"
            color3f inputs:left.connect = </Root/SBSMaterial/Left.outputs:out>
            color3f inputs:mono.connect = </Root/SBSMaterial/Left.outputs:out>
            color3f inputs:right.connect = </Root/SBSMaterial/Right.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-23.292734, 86.06585)
            float2 ui:nodegraph:node:size = (237, 145)
            int ui:nodegraph:node:stackingOrder = 79
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/SBSMaterial/GeometrySwitchCameraIndex.outputs:out>
            float inputs:metallic
            float3 inputs:normal
            float inputs:opacity
            float inputs:roughness = 1
            token outputs:out
            float2 ui:nodegraph:node:pos = (289.25455, 171.43993)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 198
        }

        def Shader "Left"
        {
            uniform token info:id = "ND_tiledimage_color3"
            asset inputs:file.connect = </Root/SBSMaterial.inputs:texture>
            string inputs:filtertype
            float2 inputs:uvtiling = (0.5, 1)
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-405.69922, 10.6875)
            float2 ui:nodegraph:node:size = (158.5, 235)
            int ui:nodegraph:node:stackingOrder = 80
        }

        def Shader "Right"
        {
            uniform token info:id = "ND_tiledimage_color3"
            color3f inputs:default
            asset inputs:file.connect = </Root/SBSMaterial.inputs:texture>
            string inputs:filtertype
            float2 inputs:realworldimagesize
            float2 inputs:realworldtilesize
            float2 inputs:texcoord
            float2 inputs:uvoffset = (0.5, 0)
            float2 inputs:uvtiling = (0.5, 1)
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-409.65234, 275.46094)
            float2 ui:nodegraph:node:size = (158.5, 235)
            int ui:nodegraph:node:stackingOrder = 187
        }
    }
}

